package com.jorami.eyeapp.dto;

import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

/**
 * LensDto est un Data Transfer Object utilis√© pour transporter
 * les donn√©es relatives √† une lentille intraoculaire (IOL) dans l'application.
 * Il est utilis√© c√¥t√© backend pour envoyer des donn√©es au frontend de mani√®re structur√©e.
 */
@NoArgsConstructor      // G√©n√®re un constructeur sans arguments (utilis√© par frameworks comme Jackson)
@AllArgsConstructor     // G√©n√®re un constructeur avec tous les champs
@Getter                 // G√©n√®re automatiquement les getters pour tous les champs
@Setter                 // G√©n√®re automatiquement les setters pour tous les champs
public class LensDto {

    /** Identifiant unique de la lentille */
    private long id;

    /** Version utilis√©e pour la gestion de la concurrence (optimistic locking) */
    private long version;

    /** Nom commercial ou technique de la lentille (ex: "ZCB00", "SN60WF") */
    private String name;

    /** Nom de marque ou commentaire visible c√¥t√© UI */
    private String commentTradeName;

    // üîπ Param√®tres de constants NOMINALES pour les formules de calcul de l'IOL

    /** Valeur nominale (si applicable, utilis√©e par certaines formules simples) */
    private Float nominal;

    /** Constantes Haigis (A0, A1, A2) utilis√©es dans la formule Haigis */
    private Float haigisA0;
    private Float haigisA1;
    private Float haigisA2;

    /** Constante utilis√©e par la formule Hoffer Q (PACD) */
    private Float hofferQPACD;

    /** Constante utilis√©e dans la formule Holladay 1 */
    private Float holladay1SF;

    /** Constante a utilis√©e dans la formule SRK/T */
    private Float srkta;

    /** Constantes de la formule Castrop (C = constante, H = hauteur, R = rayon) */
    private Float castropC;
    private Float castropH;
    private Float castropR;

    // üîπ Param√®tres de constants OPTIMIS√âES (calcul√©es √† partir de donn√©es r√©elles)

    private Float haigisA0Optimized;
    private Float haigisA1Optimized;
    private Float haigisA2Optimized;

    private Float hofferQPACDOptimized;
    private Float holladay1SFOptimized;
    private Float cookeOptimized;  // Pour la formule Cooke K6

    private Float srktaOptimized;
    private Float castropCOptimized;
    private Float castropHOptimized;
    private Float castropROptimized;

    /** Fabricant de la lentille, encapsul√© dans un objet LensManufacturerDto */
    private LensManufacturerDto lensManufacturer;

}
